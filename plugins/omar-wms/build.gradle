buildscript {
  ext {
    grailsVersion = project.grailsVersion
  }
  repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
  }
}

plugins {
  id "io.spring.dependency-management" version "0.5.2.RELEASE"
  id "com.jfrog.bintray" version "1.2"
}

evaluationDependsOnChildren()
version "0.1-SNAPSHOT"
group "org.grails.plugins"

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "spring-boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
// Used for publishing to central repository, remove if not needed
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://repo.grails.org/grails/core" }
  maven { url "http://repo.boundlessgeo.com/main" }
  maven { url "http://download.osgeo.org/webdav/geotools/" }
  maven { url "http://maven.geo-solutions.it/" }
  maven { url "https://artifacts.unidata.ucar.edu/content/repositories/unidata/" }

}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

dependencies {
  compile project( ':omar-geoscript' )
  compile project( ':omar-oms' )

//  compile( "org.geoscript:geoscript-groovy:1.5.0" ) {
//    exclude module: "slf4j-log4j12"
//    exclude module: 'ehcache'
//    exclude module: "jai_core"
//    exclude module: "jai_codec"
//    exclude module: "jai_imageio"
//    exclude module: "postgresql"
//    exclude module: "opencsv"
//    exclude module: "xml-apis"
//    exclude module: "groovy-all"
//  }

  provided 'org.springframework.boot:spring-boot-starter-logging'
  provided "org.springframework.boot:spring-boot-starter-actuator"
  provided "org.springframework.boot:spring-boot-autoconfigure"
  provided "org.springframework.boot:spring-boot-starter-tomcat"

  provided "org.grails:grails-web-boot"
  provided "org.grails:grails-dependencies"
  provided 'javax.servlet:javax.servlet-api:3.1.0'

  testCompile "org.grails:grails-plugin-testing"

  console "org.grails:grails-console"
}

task wrapper( type: Wrapper ) {
  gradleVersion = gradleWrapperVersion
}
